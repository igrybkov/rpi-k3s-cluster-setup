- hosts: localhost
  tasks:
    - name: Add hosts
      add_host:
        name: "new_rpi"
        ansible_host: "{{ target_ansible_host }}"
        ansible_user: "{{ target_ansible_user }}"
        ansible_port: "{{ target_ansible_port }}"
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
      tags: always

- hosts: new_rpi
  become: True
  tasks:
    - name: Update apt-get repo and cache
      apt:
        upgrade: yes
        update_cache: yes

    - name: install prerequisite software
      apt:
        pkg:
          - vim
          - git
          - htop
        state: present

    - name: Create user
      user:
        name: "{{target_user}}"
        password: '*'
        shell: /bin/bash
        groups: 
          - sudo
          - video
        append: yes
        state: present
        create_home: true

    - name: Allow '{{target_user}}' to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: "^{{target_user}}"
        line: '{{target_user}} ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: Set authorized keys taken from github
      authorized_key:
        user: "{{ target_user }}"
        state: present
        key: https://github.com/{{github}}.keys

    - name: 'sshd config: set ChallengeResponseAuthentication to no'
      lineinfile:
        dest: /etc/ssh/sshd_config
        state: present
        regexp: '^ChallengeResponseAuthentication'
        line: 'ChallengeResponseAuthentication no'

    - name: 'sshd config: set PasswordAuthentication to no'
      lineinfile:
        dest: /etc/ssh/sshd_config
        state: present
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication no'

    - name: 'sshd config: set UsePAM to no'
      lineinfile:
        dest: /etc/ssh/sshd_config
        state: present
        regexp: '^UsePAM'
        line: 'UsePAM no'

    - name: 'sshd config: set PermitRootLogin to no'
      lineinfile:
        dest: /etc/ssh/sshd_config
        state: present
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'

    - name: remove preinstalled software
      apt:
        pkg:
          - nano
        state: absent
    - name: Enable container features
      replace:
        path: /boot/cmdline.txt
        regexp: '^([\w](?!.*\b{{ item }}\b).*)$'
        replace: '\1 {{ item }}'
      with_items:
      - "cgroup_enable=cpuset"
      - "cgroup_memory=1"
      - "cgroup_enable=memory"

    - name: Decrease GPU memory size
      lineinfile:
        dest: /boot/config.txt
        regexp: "^#?gpu_mem"
        line: "gpu_mem=16"
        insertafter: EOF
        state: present

    - name: set timezone
      command: "timedatectl set-timezone {{ target_timezone }}"
    - name: set locale
      command: "raspi-config nonint do_change_locale {{ target_locale }}"
    - name: expand file system
      command: "raspi-config nonint do_expand_rootfs"
    - name: enable SSH via raspi-config
      shell: "raspi-config nonint do_ssh 0"
    - name: disable 'pi' user
      user:
        name: "pi"
        password: "!"
        state: present
    - name: set hostname
      shell: "raspi-config nonint do_hostname {{ target_hostname }}"

    - name: Disable system swap
      become: True
      command: "swapoff -a"

    - name: Disable system swap
      become: True
      command: "dphys-swapfile swapoff"
      failed_when: false

    - name: Remove current swaps from fstab
      become: True
      lineinfile:
        dest: /etc/fstab
        regexp: '(?i)^([^#][\S]+\s+(none|swap)\s+swap.*)'
        line: '# \1'
        backrefs: yes
        state: present

    - name: reboot
      shell: "reboot"
